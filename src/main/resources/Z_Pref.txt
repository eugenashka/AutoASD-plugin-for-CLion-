vector<int> ZFunction(string &s) {
    int n = (int) s.size();
    int l = 0, r = 0;
    vector<int> z(n);
    z[0] = n;
    for (int i = 1; i < n; i++) {
        if (i < r)
            z[i] = min(z[i - l], r - i);
        while (z[i] + i < n && s[z[i]] == s[z[i] + i])
            z[i]++;
        if (z[i] + i > r) {
            l = i;
            r = z[i] + i;
        }
    }

    return z;
}

vector<int> PrefFunction(string &s) {
    int n = (int) s.size();
    int k = 0;
    vector<int> pref(n);
    for (int i = 1; i < n; i++) {
        k = pref[i - 1];
        while (k > 0 && s[i] != s[k])
            k = pref[k - 1];
        if (s[i] == s[k])
            k++;
        pref[i] = k;
    }

    return pref;
}