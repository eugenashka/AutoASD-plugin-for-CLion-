const int L = 20;

int n, m;
vector<vector<int>> graph;
vector<vector<int>> jmp;
vector<int> dist;

void countDist(int v, int p) {
    jmp[v][0] = p;
    for (int u: graph[v]) {
        if (u == p)
            continue;

        dist[u] = dist[v] + 1;
        countDist(u, v);
    }
}

int lca(int u, int v) {
    if (dist[u] < dist[v])
        swap(u, v);

    for (int i = L; i >= 0; i--) {
        int u2 = jmp[u][i];
        if (dist[u2] >= dist[v])
            u = u2;
    }

    if (u == v) {
        return v;
    }

    for (int i = L; i >= 0; i--) {
        int u2 = jmp[u][i];
        int v2 = jmp[v][i];
        if (u2 != v2) {
            u = u2;
            v = v2;
        }
    }

    return jmp[u][0];
}